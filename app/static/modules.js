// Generated by LiveScript 1.5.0
var octavia, map, hide, el, out$ = typeof exports != 'undefined' && exports || this, split$ = ''.split, join$ = [].join;
out$.octavia = octavia = {
  modules: [],
  require: function(it){
    var ref$, ctrl, action;
    ref$ = split$.call(it, '_'), ctrl = ref$[0], action = ref$[1];
    if ((ref$ = this.modules[ctrl]) != null) {
      if (typeof ref$[action] == 'function') {
        ref$[action]();
      }
    }
  },
  register: function(arg$, fn){
    var ctrl, action, ref$;
    ctrl = arg$[0], action = arg$[1];
    ((ref$ = this.modules)[ctrl] || (ref$[ctrl] = {}))[action] = fn;
  }
};
map = require('prelude-ls').map;
hide = function(it){
  return it.style.visibility = 'hidden';
};
el = function(tag){
  return document.createElement(tag);
};
octavia.register(['student', 'login'], function(){
  var shapes, selectedShapes, passwordField, passwordContainer, passwordShapes, unselectedShape, renderPassword, shapeSelector, i$, len$;
  shapes = ['square', 'circle', 'triangle'];
  selectedShapes = [];
  passwordField = document.querySelector('#input-password'), passwordContainer = passwordField.parentNode;
  passwordShapes = document.querySelector('.password-shapes');
  unselectedShape = function(idx){
    return function(){
      selectedShapes.splice(idx, 1);
      return renderPassword();
    };
  };
  renderPassword = function(){
    var i$, ref$, len$, results$ = [];
    passwordShapes.innerHTML = '';
    passwordField.value = join$.call(selectedShapes, ' ');
    for (i$ = 0, len$ = (ref$ = selectedShapes).length; i$ < len$; ++i$) {
      results$.push((fn$.call(this, i$, ref$[i$])));
    }
    return results$;
    function fn$(idx, passwordShape){
      var x$;
      x$ = el('span');
      x$.className = "shape shape-" + passwordShape;
      x$.onclick = unselectedShape(idx);
      passwordShapes.appendChild(x$);
      return x$;
    }
  };
  hide(passwordField);
  shapeSelector = document.querySelector('.shape-selector');
  for (i$ = 0, len$ = shapes.length; i$ < len$; ++i$) {
    (fn$.call(this, shapes[i$]));
  }
  function fn$(shape){
    var x$, shapeEl;
    console.log(shape);
    x$ = shapeEl = el('span');
    x$.className = "shape shape-" + shape;
    shapeEl.onclick = function(){
      selectedShapes.push(shape);
      renderPassword();
    };
    shapeSelector.appendChild(shapeEl);
  }
});